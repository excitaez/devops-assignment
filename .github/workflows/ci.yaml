name: Build and Push to Docker Hub

# on:
#   push:
#     branches: [ "main" ]         # push เข้า main -> สร้าง :latest และ :<git-sha>
#     tags: [ "v*" ]               # ติด tag v1.2.3 -> สร้าง :1.2.3 และ :1.2
#   workflow_dispatch: {}          # เผื่อกดรันเองได้

on:
  push:
    - main
  workflow_dispatch: {}          # เผื่อกดรันเองได้

env:
  # เปลี่ยนค่าเป็น repo จริงของคุณ เช่น anawat/hello-api
  DOCKERHUB_REPO: senztenzaez/hello-api

jobs:
  docker:
    runs-on: ubuntu-latest
    # permissions:
    #   contents: read
    #   packages: write

    steps:
      - name: Checkout
      # ถ้าต้องการใช้ git describe หรืออ่านไฟล์เพิ่ม ให้ fetch-depth เป็น 0
        uses: actions/checkout@v4
        # with:
        #   fetch-depth: 0

      # - name: Set up QEMU (multi-arch)
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_REPO }}
          tags: |
            # สร้าง tag ตาม branch
            type=ref,event=branch
            # สร้าง tag จาก git short SHA
            type=sha,format=short
            # ถ้า push tag v1.2.3 จะได้ 1.2.3 และ 1.2
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          # platforms: linux/amd64,linux/arm64
          push: true
          # ใช้ tag/label จาก metadata-action
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build cache
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      # ทำให้แน่ใจว่ามี :latest เมื่อ push เข้า main
      # - name: Tag latest on main
      #   if: github.ref == 'refs/heads/main'
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: ${{ env.DOCKERHUB_REPO }}:latest
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
